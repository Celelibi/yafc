Index: yafc-1.1.1.dfsg.1/lib/modechange.c
===================================================================
--- yafc-1.1.1.dfsg.1.orig/lib/modechange.c	2006-09-20 13:24:04.000000000 -0400
+++ yafc-1.1.1.dfsg.1/lib/modechange.c	2006-09-20 13:24:15.000000000 -0400
@@ -55,7 +55,7 @@
 
 #define isodigit(c) ((c) >= '0' && (c) <= '7')
 
-static int oatoi ();
+static int oatoi(const char *s);
 
 /* Return a linked list of file mode change operations created from
    MODE_STRING, an ASCII string that contains either an octal number
@@ -71,9 +71,7 @@
    return MODE_MEMORY_EXHAUSTED if there is insufficient memory. */
 
 struct mode_change *
-mode_compile (mode_string, masked_ops)
-     const char *mode_string;
-     unsigned masked_ops;
+mode_compile (const char *mode_string, unsigned masked_ops)
 {
   struct mode_change *head;	/* First element of the linked list. */
   struct mode_change *change;	/* An element of the linked list. */
@@ -308,11 +306,9 @@
 /* Free the memory used by the list of file mode change operations
    CHANGES. */
 
-void
-mode_free (changes)
-     register struct mode_change *changes;
+void mode_free (struct mode_change *changes)
 {
-  register struct mode_change *next;
+  struct mode_change *next;
 
   while (changes)
     {
@@ -325,9 +321,7 @@
 /* Return a positive integer containing the value of the ASCII
    octal number S.  If S is not an octal number, return -1.  */
 
-static int
-oatoi (s)
-     char *s;
+static int oatoi (const char *s)
 {
   register int i;
 
Index: yafc-1.1.1.dfsg.1/src/ftp/ftpsend.c
===================================================================
--- yafc-1.1.1.dfsg.1.orig/src/ftp/ftpsend.c	2006-09-20 13:24:04.000000000 -0400
+++ yafc-1.1.1.dfsg.1/src/ftp/ftpsend.c	2006-09-20 13:24:15.000000000 -0400
@@ -971,7 +971,7 @@
 	}
 
 	if(rp > 0L) {
-		if(fseeko(fp, rp, SEEK_SET) != 0) {
+		if(fseek(fp, rp, SEEK_SET) != 0) {
 			ftp_err(_("%s: %s, transfer cancelled\n"),
 					outfile, strerror(errno));
 			close_func(fp);
@@ -1044,7 +1044,7 @@
 
 
 	if(ftp->restart_offset > 0L) {
-		if(fseeko(fp, ftp->restart_offset, SEEK_SET) != 0) {
+		if(fseek(fp, ftp->restart_offset, SEEK_SET) != 0) {
 			ftp_err(_("%s: %s, transfer cancelled\n"),
 					outfile, strerror(errno));
 			fclose(fp);
Index: yafc-1.1.1.dfsg.1/src/ftp/socket.c
===================================================================
--- yafc-1.1.1.dfsg.1.orig/src/ftp/socket.c	2006-09-20 13:24:04.000000000 -0400
+++ yafc-1.1.1.dfsg.1/src/ftp/socket.c	2006-09-20 13:24:15.000000000 -0400
@@ -153,7 +153,7 @@
 {
 	int s;
 	struct sockaddr sa;
-	int l = sizeof(sa);
+	socklen_t l = sizeof(sa);
 	int tfd;
 
 	if(!pasvmode) {
Index: yafc-1.1.1.dfsg.1/src/utils.c
===================================================================
--- yafc-1.1.1.dfsg.1.orig/src/utils.c	2006-09-20 13:24:15.000000000 -0400
+++ yafc-1.1.1.dfsg.1/src/utils.c	2006-09-20 13:24:15.000000000 -0400
@@ -211,11 +211,11 @@
 	pid = fork();
 	if(pid == 0) { /* child thread */
 		if(cmdline)
-			execl(shell, shell, "-c", cmdline, 0);
+			execl(shell, shell, "-c", cmdline, (char *)NULL);
 		else {
 			printf(_("Executing '%s', use 'exit' to exit from shell...\n"),
 				   shell);
-			execl(shell, shell, 0);
+			execl(shell, shell, (char *)NULL);
 		}
 		perror(shell);
 		exit(1);
