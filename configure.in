dnl Process this file with autoconf to produce a -*- m4 -*- configure script.

dnl
dnl init
dnl

AC_INIT(src/ftp/ftp.c)
AC_CONFIG_AUX_DIR(support)
AM_INIT_AUTOMAKE(yafc, 0.6.7)
AM_CONFIG_HEADER(config.h)

CDPATH=""

ALL_LINGUAS=""

dnl AM_MAINTAINER_MODE

AC_CANONICAL_HOST

AC_DEFINE_UNQUOTED(HOSTTYPE, "${host_cpu}-${host_vendor}-${host_os}")

AC_PROG_CC

dnl checks for different unix variants
AC_ISC_POSIX
AC_AIX
AC_MINIX

AM_PROG_CC_STDC
AC_PROG_INSTALL

dnl AC_CYGWIN

dnl
dnl add --with-warn option
dnl

mhe_WITH_WARN

dnl
dnl Checks for header files.
dnl

AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_STAT
AC_HEADER_TIME
AC_CHECK_HEADERS(stdlib.h pwd.h \
   sys/stat.h sys/socket.h sys/types.h \
   netdb.h netinet/in.h netinet/ip.h netinet/in_systm.h \
   arpa/inet.h sys/ioctl.h
)

dnl
dnl Checks for typedefs, structures, and compiler characteristics.
dnl

AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_MODE_T
dnl AC_STRUCT_TM

dnl
dnl Checks for library functions
dnl

AC_CHECK_HEADERS(setjmp.h)

AC_CHECK_FUNCS(memcpy sigsetjmp)

BASH_FUNC_POSIX_SETJMP

AM_GNU_GETTEXT
dnl AC_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl)

AC_SEARCH_LIBS(socket, socket, ,
 AC_WARN(can't find socket function))

AC_SEARCH_LIBS(gethostbyname, resolv nsl, ,
 AC_WARN(can't find resolver functions))

AC_CHECK_HEADERS(dirent.h ndir.h sys/ndir.h sys/dir.h memory.h)
AC_CHECK_FUNCS(strcoll)

dnl AC_CHECK_FUNCS(setproctitle)
AC_REPLACE_FUNCS(vasprintf)

AC_CHECK_FUNCS(getopt_long)
if test "$ac_cv_func_getopt_long" != "yes"; then
  LIBOBJS="$LIBOBJS getopt.o getopt1.o"
fi

AC_CHECK_FUNC(regcomp,
[
 AC_CHECK_HEADERS(regex.h)
 AC_DEFINE(HAVE_REGEX)
])

mhe_ARG_WITH(socks)
if test "$mhe_with_socks" = "yes"; then
  AC_CHECK_LIB(socks, Rconnect, , [
    AC_MSG_ERROR(socks library not found)
  ])
fi

mhe_ARG_WITH(socks5)
if test "$mhe_with_socks5" = "yes"; then
  AC_CHECK_LIB(socks5, SOCKSconnect, , [
    AC_MSG_ERROR(socks5 library not found)
  ])
fi

mhe_ARG_WITH(readline, yes)
if test "$mhe_with_readline" = "yes"; then
 mhe_CHECK_READLINE
fi

dnl AC_FUNC_FNMATCH
dnl if test "$ac_cv_func_fnmatch_works" != "yes"; then
dnl   LIBOBJS="$LIBOBJS fnmatch.o"
dnl else
dnl   AC_CHECK_HEADERS(fnmatch.h)
dnl fi

AC_SEARCH_LIBS(inet_aton, resolv nsl)
AC_SEARCH_LIBS(herror, resolv nsl)

AC_CHECK_FUNCS(gettimeofday uname setsockopt)

mhe_CHECK_PROTO(herror, [
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif])

mhe_CHECK_PROTO(vasprintf, [#include <stdio.h>])
mhe_CHECK_PROTO(asprintf, [#include <stdio.h>])

mhe_ARG_WITH(krb4)
mhe_ARG_WITH(krb5)

AC_MSG_CHECKING(whether Kerberos support is requested)

if test "$mhe_with_krb4" = "yes" -o "$mhe_with_krb5" = yes; then
  AC_MSG_RESULT(yes)

  LIBOBJS="$LIBOBJS security.o"

  AC_CHECK_LIB(des, des_pcbc_encrypt)

    if test "$ac_cv_lib_des_des_pcbc_encrypt" = "no" ; then
        AC_CHECK_LIB(des425, des_pcbc_encrypt)
    fi

    dnl if we found either flavor of the des library, look for the
    dnl header, and then continue on by looking for the appropriate
    dnl version and flavor of other libraries.
    if test "$ac_cv_lib_des_des_pcbc_encrypt" = "yes" || \
        test "$ac_cv_lib_des425_des_pcbc_encrypt" = "yes" ; then
        AC_CHECK_HEADERS(des.h)

        if test "$mhe_with_krb4" = "yes"; then
          AC_CHECK_LIB(krb, krb_net_read,
          [
            LIBS="-lkrb $LIBS"
            AC_DEFINE(KRB4)
            AC_CHECK_FUNCS(krb_get_our_ip_for_realm)
            AC_CHECK_HEADERS(krb.h)
            LIBOBJS="$LIBOBJS krb4.o kauth.o"
          ])
        fi

        if test "$mhe_with_krb5" = "yes"; then
          echo "checking for Heimdal Kerberos 5..."

          dnl have we found all the libraries we need?  So far, yes.
          found_all_krb5=1;

          SAVELIBS="$LIBS"
          AC_CHECK_LIB(com_err, init_error_table)

          dnl MIT krb5 does not have an init_error_table in libcom_err,
          dnl but there is an add_error_table.
          if test "$ac_cv_lib_com_err_init_error_table" = "no" ; then
            echo "checking for MIT Kerberos 5..."
            AC_CHECK_LIB(com_err, add_error_table)
            if test "$ac_cv_lib_com_err_add_error_table" = "no" ; then
              found_all_krb5=0;
            fi
          fi

          if test "$found_all_krb5" = "1" ; then
            dnl only check for libasn1 if we're using Heimdal, MIT's krb5
            dnl doesn't have this library.
            if test "$ac_cv_lib_com_err_init_error_table" = "yes" ; then
              AC_CHECK_LIB(asn1, copy_EncryptionKey)
              if test "$ac_cv_lib_asn1_copy_EncryptionKey" = "no" ; then
                found_all_krb5=0;
              fi
            fi
          fi

          if test "$found_all_krb5" = "1" ; then
            if test "$ac_cv_lib_com_err_init_error_table" = "yes" ; then
              dnl Heimdal calls this libdb
              AC_CHECK_LIB(db, dbopen)
              if test "$ac_cv_lib_db_dbopen" = "no" ; then
                found_all_krb5=0;
              fi
            else
              dnl MIT calls this libkdb5
              AC_CHECK_LIB(kdb5, krb5_db_init)
              if test "$ac_cv_lib_kdb5_krb5_db_init" = "no" ; then
                found_all_krb5=0;
              fi
            fi
          fi

          if test "$found_all_krb5" = "1" ; then
            dnl only check for libroken if we're using Heimdal, MIT's krb5
            dnl doesn't have this library.
            if test "$ac_cv_lib_com_err_init_error_table" = "yes" ; then
              AC_CHECK_LIB(roken, roken_gethostbyaddr)
              if test "$ac_cv_lib_roken_roken_gethostbyaddr" = "no" ; then
                found_all_krb5=0;
              fi
            fi
          fi

          if test "$found_all_krb5" = "1" ; then
            dnl shockingly, MIT and Heimdal agree on the library name and
            dnl the symbol, here.
            AC_CHECK_LIB(krb5, krb5_mk_priv)
              if test "$ac_cv_lib_krb5_krb5_mk_priv" = "no" ; then
                found_all_krb5=0;
              fi
          fi

          if test "$found_all_krb5" = "1" && \
			test "$ac_cv_lib_krb5_krb5_mk_priv" = "yes"; then
            if test "$ac_cv_lib_com_err_init_error_table" = "yes" ; then
              dnl the Heimdal name of what we're really looking for.
              AC_CHECK_LIB(gssapi, gss_init_sec_context)
              if test "$ac_cv_lib_gssapi_gss_init_sec_context" = "yes"; then
                AC_DEFINE(KRB5)
                AC_CHECK_HEADERS(krb5.h gssapi.h)
                LIBOBJS="$LIBOBJS gssapi.o"
              else
                found_all_krb5=0;
                LIBS="$SAVELIBS"
              fi
            else
              dnl the MIT name of what we're really looking for.
              AC_CHECK_LIB(gssapi_krb5, gss_init_sec_context)
              if test "$ac_cv_lib_gssapi_krb5_gss_init_sec_context" = "yes"
              then
                AC_DEFINE(KRB5)
                AC_CHECK_HEADERS(krb5.h)
                AC_CHECK_HEADERS(gssapi.h gssapi/gssapi.h)
                AC_CHECK_HEADERS(gssapi/gssapi_generic.h gssapi/gssapi_krb5.h)
                LIBOBJS="$LIBOBJS gssapi.o"
              else
                found_all_krb5=0;
                LIBS="$SAVELIBS"
              fi
            fi
          else
            LIBS="$SAVELIBS"
          fi
        fi

    else
        AC_MSG_WARN([Kerberos support not enabled])
    fi

    if test "$found_all_krb5" = "0" ; then
      AC_MSG_WARN([Kerberos support not enabled])
    else
      dnl we found all of one version of krb5 or another.  Define one
      dnl additional convenience cpp symbol, so we know which it is.  This
      dnl is currently important for only one symbol, but there may be
      dnl additional things that hinge on this in the future.
      if test "$ac_cv_lib_com_err_init_error_table" = "yes" ; then
        AC_DEFINE(KRB5_HEIMDAL)
      else
        AC_DEFINE(KRB5_MIT)
      fi
    fi

    AC_REPLACE_FUNCS(strlcpy)

else
  AC_MSG_RESULT(no)
fi

AC_OUTPUT([Makefile intl/Makefile doc/Makefile lib/Makefile po/Makefile.in
  src/Makefile src/ftp/Makefile src/libmhe/Makefile yafc.spec],
[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])

echo "------ configure complete ------"
echo "Compiling with $CC $CFLAGS"
echo "CPPFLAGS = $CPPFLAGS"
echo "LDFLAGS = $LDFLAGS"
echo "LIBS = $LIBS $RLLIBS"
echo "installing in $prefix"
echo "----- type make to compile -----"
